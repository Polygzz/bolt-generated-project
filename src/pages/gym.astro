---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
---

<Layout>
  <Navigation />
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">Gym Workouts</h1>

    <form id="addGymWorkout" class="bg-white p-6 rounded-lg shadow-md mb-8">
      <h2 class="text-xl font-bold mb-4">Create Gym Workout</h2>
      
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
          Workout Name
        </label>
        <input
          type="text"
          id="name"
          name="name"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          required
        />
      </div>

      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="type">
          Workout Type
        </label>
        <select
          id="type"
          name="type"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          required
        >
          <option value="Strength">Strength</option>
          <option value="Endurance">Endurance</option>
          <option value="Power">Power</option>
          <option value="Recovery">Recovery</option>
        </select>
      </div>

      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="image">
          Workout Image URL
        </label>
        <input
          type="url"
          id="image"
          name="image"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          placeholder="https://example.com/image.jpg"
        />
      </div>

      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="notes">
          Workout Notes
        </label>
        <textarea
          id="notes"
          name="notes"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-24"
          placeholder="Add notes about this workout..."
        ></textarea>
      </div>

      <div id="exercisesContainer">
        <h3 class="text-lg font-bold mb-4">Exercises</h3>
      </div>

      <button
        type="button"
        id="addExerciseButton"
        class="mb-4 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
      >
        Add Exercise
      </button>

      <button
        type="submit"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
      >
        Create Workout
      </button>
    </form>

    <div id="gymWorkouts" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- Gym workouts will be populated by JavaScript -->
    </div>
  </main>
</Layout>

<script>
  let exerciseCounter = 0;

  function addExerciseField(container, exercise = null) {
    const exerciseDiv = document.createElement('div');
    exerciseDiv.className = 'mb-4 p-4 border rounded';
    exerciseDiv.innerHTML = `
      <div class="mb-2">
        <label class="block text-gray-700 text-sm font-bold mb-2">
          Exercise Name
        </label>
        <input
          type="text"
          name="exercise_${exerciseCounter}_name"
          value="${exercise ? exercise.name : ''}"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          required
        />
      </div>
      <div class="grid grid-cols-3 gap-4">
        <div>
          <label class="block text-gray-700 text-sm font-bold mb-2">
            Sets
          </label>
          <input
            type="text"
            name="exercise_${exerciseCounter}_sets"
            value="${exercise ? exercise.sets : ''}"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
        <div>
          <label class="block text-gray-700 text-sm font-bold mb-2">
            Reps
          </label>
          <input
            type="text"
            name="exercise_${exerciseCounter}_reps"
            value="${exercise ? exercise.reps : ''}"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
        <div>
          <label class="block text-gray-700 text-sm font-bold mb-2">
            Rest (seconds)
          </label>
          <input
            type="number"
            name="exercise_${exerciseCounter}_rest"
            value="${exercise ? exercise.rest : ''}"
            min="0"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
      </div>
      <button
        type="button"
        onclick="this.parentElement.remove()"
        class="mt-2 text-red-500 hover:text-red-700"
      >
        Remove Exercise
      </button>
    `;
    container?.appendChild(exerciseDiv);
    exerciseCounter++;
  }

  // Add event listener for the Add Exercise button
  document.getElementById('addExerciseButton')?.addEventListener('click', () => {
    addExerciseField(document.getElementById('exercisesContainer'));
  });

  const form = document.getElementById('addGymWorkout');
  const workouts = JSON.parse(localStorage.getItem('gymWorkouts') || '[]');

  function displayWorkouts() {
    const workoutsContainer = document.getElementById('gymWorkouts');
    if (workoutsContainer) {
      workoutsContainer.innerHTML = workouts.map((workout, index) => `
        <div class="bg-white p-6 rounded-lg shadow-md">
          ${workout.image ? `
            <img src="${workout.image}" alt="${workout.name}" class="w-full h-48 object-cover rounded-lg mb-4"/>
          ` : ''}
          <h3 class="text-xl font-bold mb-2">${workout.name}</h3>
          <p class="text-gray-600 mb-4">${workout.type}</p>
          <div class="mb-4">
            <h4 class="font-bold mb-2">Exercises:</h4>
            ${workout.exercises.map(exercise => `
              <div class="mb-2 p-2 bg-gray-50 rounded">
                <p class="font-semibold">${exercise.name}</p>
                <p class="text-sm text-gray-600">
                  ${exercise.sets} sets Ã— ${exercise.reps} reps
                  (${exercise.rest}s rest)
                </p>
              </div>
            `).join('')}
          </div>
          ${workout.notes ? `
            <div class="mb-4">
              <h4 class="font-bold mb-2">Notes:</h4>
              <p class="text-sm text-gray-600 whitespace-pre-line">${workout.notes}</p>
            </div>
          ` : ''}
          <div class="flex space-x-2">
            <button
              onclick="editGymWorkout(${index})"
              class="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            >
              Edit
            </button>
            <button
              onclick="deleteGymWorkout(${index})"
              class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            >
              Delete
            </button>
          </div>
        </div>
      `).join('');
    }
  }

  function editGymWorkout(index) {
    const workout = workouts[index];
    
    // Create a form for editing
    const form = document.createElement('form');
    form.innerHTML = `
      <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 overflow-y-auto">
        <div class="bg-white p-6 rounded-lg w-full max-w-lg">
          <h3 class="text-xl font-bold mb-4">Edit Workout</h3>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Name</label>
            <input type="text" value="${workout.name}" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="name">
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Type</label>
            <select class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="type">
              <option value="Strength" ${workout.type === 'Strength' ? 'selected' : ''}>Strength</option>
              <option value="Endurance" ${workout.type === 'Endurance' ? 'selected' : ''}>Endurance</option>
              <option value="Power" ${workout.type === 'Power' ? 'selected' : ''}>Power</option>
              <option value="Recovery" ${workout.type === 'Recovery' ? 'selected' : ''}>Recovery</option>
            </select>
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Image URL</label>
            <input type="url" value="${workout.image || ''}" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="image">
          </div>
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">Notes</label>
            <textarea class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline h-24" name="notes">${workout.notes || ''}</textarea>
          </div>
          <div id="editExercisesContainer">
            <h4 class="text-lg font-bold mb-4">Exercises</h4>
          </div>
          <button
            type="button"
            onclick="addExerciseField(this.parentElement.querySelector('#editExercisesContainer'))"
            class="mb-4 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
          >
            Add Exercise
          </button>
          <div class="flex justify-end space-x-2">
            <button type="button" onclick="this.closest('form').remove()" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Cancel</button>
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Save</button>
          </div>
        </div>
      </div>
    `;

    document.body.appendChild(form);

    // Add existing exercises to the edit form
    const editExercisesContainer = form.querySelector('#editExercisesContainer');
    workout.exercises.forEach(exercise => {
      addExerciseField(editExercisesContainer, exercise);
    });

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      
      const exercises = [];
      for (let i = 0; i < exerciseCounter; i++) {
        const name = formData.get(`exercise_${i}_name`);
        const sets = formData.get(`exercise_${i}_sets`);
        const reps = formData.get(`exercise_${i}_reps`);
        const rest = formData.get(`exercise_${i}_rest`);
        
        if (name && sets && reps && rest) {
          exercises.push({
            name,
            sets: sets,
            reps: reps,
            rest: parseInt(rest as string)
          });
        }
      }

      workouts[index] = {
        name: formData.get('name'),
        type: formData.get('type'),
        exercises,
        image: formData.get('image'),
        notes: formData.get('notes')
      };

      localStorage.setItem('gymWorkouts', JSON.stringify(workouts));
      displayWorkouts();
      form.remove();
    });
  }

  function deleteGymWorkout(index) {
    if (confirm('Are you sure you want to delete this workout?')) {
      workouts.splice(index, 1);
      localStorage.setItem('gymWorkouts', JSON.stringify(workouts));
      displayWorkouts();
    }
  }

  form?.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(e.target as HTMLFormElement);
    
    const exercises = [];
    for (let i = 0; i < exerciseCounter; i++) {
      const name = formData.get(`exercise_${i}_name`);
      const sets = formData.get(`exercise_${i}_sets`);
      const reps = formData.get(`exercise_${i}_reps`);
      const rest = formData.get(`exercise_${i}_rest`);
      
      if (name && sets && reps && rest) {
        exercises.push({
          name,
          sets: sets,
          reps: reps,
          rest: parseInt(rest as string)
        });
      }
    }

    const newWorkout = {
      name: formData.get('name'),
      type: formData.get('type'),
      exercises,
      image: formData.get('image'),
      notes: formData.get('notes')
    };

    workouts.push(newWorkout);
    localStorage.setItem('gymWorkouts', JSON.stringify(workouts));
    displayWorkouts();
    form.reset();
    
    const container = document.getElementById('exercisesContainer');
    if (container) {
      container.innerHTML = '<h3 class="text-lg font-bold mb-4">Exercises</h3>';
    }
    exerciseCounter = 0;
    addExerciseField(container);
  });

  // Add initial exercise field
  addExerciseField(document.getElementById('exercisesContainer'));
  displayWorkouts();

  // Make functions globally accessible
  window.editGymWorkout = editGymWorkout;
  window.deleteGymWorkout = deleteGymWorkout;
  window.addExerciseField = addExerciseField;
</script>
