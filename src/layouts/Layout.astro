<!doctype html>
    <html lang="en" class="dark">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>Soccer Training Tracker</title>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Merriweather:wght@400;700&family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
        <script src="https://cdn.tailwindcss.com"></script>
        <style>
          /* Light mode styles (default) */
          :root {
            --bg-color: #e0f2fe; /* Light blue background */
            --text-color: #333;
            --primary-color: #007bff;
            --secondary-color: #6c757d;
            --box-color: #fff; /* White boxes */
            --accent-color: #007bff;
          }

          /* Dark mode styles */
          .dark {
            --bg-color: #1a202c;
            --text-color: #f0f0f0;
            --primary-color: #63b3ed;
            --secondary-color: #a0aec0;
            --box-color: #2d3748;
            --accent-color: #4fd1c5;
          }

          body {
            background-color: var(--bg-color);
            color: var(--text-color);
          }

          .bg-neutral {
            background-color: var(--bg-color);
          }

          .text-textPrimary {
            color: var(--text-color);
          }

          .text-textSecondary {
            color: var(--secondary-color);
          }

          .bg-boxColor {
            background-color: var(--box-color);
          }

          .text-primary {
            color: var(--primary-color);
          }

          .text-secondary {
            color: var(--secondary-color);
          }

          .bg-accent {
            background-color: var(--accent-color);
          }

          .transition-colors {
            transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
          }
        </style>
      </head>
      <body class="bg-neutral font-sans min-h-screen text-textPrimary">
        <div class="flex justify-end p-4">
          <button id="theme-toggle" class="focus:outline-none">
            <svg id="theme-toggle-dark-icon" class="w-6 h-6 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
            <svg id="theme-toggle-light-icon" class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 111-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-4-8a1 1 0 00-1 1h2a1 1 0 100-2h-2zM3 14a1 1 0 011-1h1a1 1 0 110 2H4a1 1 0 01-1-1zm14-1a1 1 0 11-2 0v1a1 1 0 112 0v-1zM13 14a1 1 0 11-2 0v1a1 1 0 112 0v-1zM10 18a1 1 0 01-1-1v-1a1 1 0 112 0v1a1 1 0 01-1 1zM5 14a1 1 0 11-2 0v1a1 1 0 112 0v-1zM15 14a1 1 0 11-2 0v1a1 1 0 112 0v-1z"></path></svg>
          </button>
          <!-- Conditionally render the login button or soccer ball icon -->
          {
            let isLoggedIn = false;
            if (typeof window !== 'undefined') {
              const storedSession = localStorage.getItem('supabase.auth.token');
              isLoggedIn = storedSession !== null;
            }

            isLoggedIn ? (
              <a href="/">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042a8.967 8.967 0 00-4.48 2.48 8.969 8.969 0 00-1.965 4.505l-1.542 4.505a2.25 2.25 0 00.268 2.36l1.712 1.712a2.25 2.25 0 002.36.268l4.505-1.542a8.969 8.969 0 004.505-1.965 8.967 8.967 0 002.48-4.48 8.967 8.967 0 00-2.48-4.48 8.969 8.969 0 00-4.505-1.965l-1.542-4.505a2.25 2.25 0 00-2.36-.268l-1.712-1.712a2.25 2.25 0 00-2.36.268l-4.505 1.542a8.969 8.969 0 00-1.965 4.505 8.967 8.967 0 002.48 4.48z" />
                </svg>
              </a>
            ) : (
              <a href="/login" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition-colors duration-300">
                Login
              </a>
            )
          }
        </div>
        <slot />
        <script>
          if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark');
            document.getElementById('theme-toggle-light-icon').classList.remove('hidden');
            document.getElementById('theme-toggle-dark-icon').classList.add('hidden');
          } else {
            document.documentElement.classList.remove('dark')
            document.getElementById('theme-toggle-light-icon').classList.add('hidden');
            document.getElementById('theme-toggle-dark-icon').classList.remove('hidden');
          }

          var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
          var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

          if (themeToggleDarkIcon && themeToggleLightIcon) {
            const themeToggleBtn = document.getElementById('theme-toggle');

            themeToggleBtn.addEventListener('click', function() {
              // if set via local storage previously
              if (localStorage.getItem('color-theme')) {
                if (localStorage.getItem('color-theme') === 'light') {
                  document.documentElement.classList.add('dark');
                  localStorage.setItem('color-theme', 'dark');
                  themeToggleDarkIcon.classList.add('hidden');
                  themeToggleLightIcon.classList.remove('hidden');
                } else {
                  document.documentElement.classList.remove('dark');
                  localStorage.setItem('color-theme', 'light');
                  themeToggleDarkIcon.classList.remove('hidden');
                  themeToggleLightIcon.classList.add('hidden');
                }

              // if NOT set via local storage previously
              } else {
                if (document.documentElement.classList.contains('dark')) {
                  document.documentElement.classList.remove('dark');
                  localStorage.setItem('color-theme', 'light');
                  themeToggleDarkIcon.classList.remove('hidden');
                  themeToggleLightIcon.classList.add('hidden');
                } else {
                  document.documentElement.classList.add('dark');
                  localStorage.setItem('color-theme', 'dark');
                  themeToggleDarkIcon.classList.add('hidden');
                  themeToggleLightIcon.classList.remove('hidden');
                }
              }
            })
          }
        </script>
      </body>
    </html>
